// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NexusGPT.Adapter.Out;

#nullable disable

namespace NexusGPT.Adapter.Out.Migrations
{
    [DbContext(typeof(MessageChannelDbContext))]
    [Migration("20240617064429_AddMessageCreateTime")]
    partial class AddMessageCreateTime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NexusGPT.Entities.MessageChannel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTimeOffset>("CreateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TotalAnswerTokenCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalQuestionTokenCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalTokenCount")
                        .HasColumnType("int");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_MessageChannel_Id")
                        .IsUnique();

                    b.ToTable("MessageChannels", (string)null);
                });

            modelBuilder.Entity("NexusGPT.Entities.MessageChannel", b =>
                {
                    b.OwnsMany("NexusGPT.Entities.Message", "Messages", b1 =>
                        {
                            b1.Property<Guid>("MessageChannelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("Id");

                            b1.Property<string>("Answer")
                                .IsRequired()
                                .HasMaxLength(2000)
                                .HasColumnType("nvarchar(2000)");

                            b1.Property<int>("AnswerTokenCount")
                                .HasColumnType("int");

                            b1.Property<Guid>("ChannelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTimeOffset>("CreateTime")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("Question")
                                .IsRequired()
                                .HasMaxLength(2000)
                                .HasColumnType("nvarchar(2000)");

                            b1.Property<int>("QuestionTokenCount")
                                .HasColumnType("int");

                            b1.Property<int>("TotalTokenCount")
                                .HasColumnType("int");

                            b1.HasKey("MessageChannelId", "Id");

                            b1.HasIndex("Id")
                                .IsUnique()
                                .HasDatabaseName("IX_Message_Id");

                            b1.ToTable("Messages", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("MessageChannelId");
                        });

                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
